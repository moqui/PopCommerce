<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a 
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<screen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/xml-screen-3.xsd"
        default-menu-include="false" require-authentication="anonymous-all" history="false">

    <transition name="login" require-session-token="false">
        <actions>
            <script>ec.user.loginUser(username, password)</script>
            <if condition="ec.user.userAccount">
                <!-- TODO: move this to a service so that screen.@require-authentication can be false instead of anonymous-all (slightly tighter security) -->
                <!-- see if there is an open order for user and get that ID into session -->
                <entity-find entity-name="mantle.order.OrderHeaderAndPart" list="existingOrderList">
                    <econdition field-name="statusId" value="OrderOpen"/>
                    <econdition field-name="customerPartyId" from="ec.user.userAccount.partyId"/>
                    <select-field field-name="orderId"/><select-field field-name="orderPartSeqId"/>
                    <order-by field-name="-entryDate"/><!-- get most recent open order -->
                </entity-find>
                <if condition="existingOrderList">
                    <if condition="ec.web.sessionAttributes.cartOrderId">
                        <!-- if a cartOrderId is in the session, merge its items into the existing order -->
                        <service-call name="mantle.order.OrderServices.merge#OrderItems"
                                      in-map="[orderId:existingOrderList[0].orderId, fromOrderId:ec.web.sessionAttributes.cartOrderId]"/>
                    </if>
                    <!-- whether there was one in the session or not always set the existing orderId there -->
                    <set field="ec.web.sessionAttributes.cartOrderId" from="existingOrderList[0].orderId"/>

                    <else>
                        <!-- no existing open order, if a cartOrderId is in the session set the logged in user as the customer -->
                        <if condition="ec.web.sessionAttributes.cartOrderId">
                            <entity-find entity-name="OrderPart" list="orderPartList">
                                <econdition field-name="orderId" from="ec.web.sessionAttributes.cartOrderId"/>
                            </entity-find>
                            <if condition="orderPartList">
                                <set field="orderPart" from="orderPartList[0]"/>
                                <set field="orderPart.customerPartyId" from="ec.user.userAccount.partyId"/>
                                <entity-update value-field="orderPart"/>
                            </if>
                        </if>
                    </else>
                </if>
            </if>
        </actions>
        <default-response type="screen-last"/>
        <error-response url="."/>
    </transition>
    <transition name="logout"><actions><script>ec.user.logoutUser()</script></actions>
        <default-response url="/popc"/><error-response url="."/></transition>
    <transition name="resetPassword" require-session-token="false"><service-call name="org.moqui.impl.UserServices.reset#Password" in-map="[username:username]"/>
        <default-response url="."/></transition>
    <transition name="changePassword" require-session-token="false"><service-call name="org.moqui.impl.UserServices.update#Password"/>
        <default-response url="../Login"/><error-response url="."/></transition>
    <transition name="createAccount" require-session-token="false">
        <!-- TODO: should set as customer on existing cart in session if there is one -->
        <service-call name="mantle.party.PartyServices.create#Account" in-map="context + [roleTypeId:'Customer']"/>
        <default-response type="screen-last"/><error-response url="."/>
    </transition>

    <widgets>
        <container style="login">
            <container style="container">
                <render-mode><text type="html" template="true" location="component://PopCommerce/screen/PopCommerceRoot/Login.ftl"/></render-mode>
            </container>
        </container>

        <!-- TODO remove this link when moving away from more of a testing mode, very convenient for now -->
        <link url="login" text="Test Login (Joe Q Public)">
            <parameter name="username" value="joe@public.com"/>
            <parameter name="password" value="moqui"/>
        </link>
    </widgets>
</screen>
